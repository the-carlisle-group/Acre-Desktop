 Install←{
     z←setEmulators setCase setAplVer''
     path wsid←2⍴,\1 _NPARTS(⍵≡∊⍵)⊃⍵ ⎕WSID
     name←1↓{⍵/⍨1=+\⍵='.'}⊃⎕XSI
     apo←'"'∘(qu←UT.qu)
     del←⊃~∘'∘'⊢⎕SE.SALT.PATHDEL                           ⍝ thanks Gil
     old←1↓¨{⍵⊂⍨⍵∊del,'∘'}del,⎕SE.SALT.Settings'cmddir'    ⍝ seek both
     f←{⍵/⍨(⊢=⌈/)(+\×~)⍵∊'/\'}                             ⍝ last /substr/
     old←⊃,/del,¨old/⍨~¯1(↓∊↑)Cc f¨old,⊂path               ⍝ sans me
     z←⎕SE.SALT.Settings'cmddir "',path,old,'" -permanent' ⍝ add me
     cmds help opt syn type grp←{
         ⍕¨qu¨¨⍵.(command help options syntax type group)}cmdDefs name
     re←{⊃⍵{(⍴,⍵)↓⊃,/⍵∘,¨(⍴,⍺)↓¨⍺{⍵⊂⍨⍺⍷⍵}⍺,⍺⍺}/⍺}
     data←(name)(grp)(cmds)(opt)(help)(type)(syn)
     code←'<n>' '<g>' '<c>' '<o>' '<h>' '<t>' '<s>'
     script←,(⎕UCS 10),{0 3↓⍵⌿⍨>/'⍝: '⍷⍵}⎕CR⊃⎕SI
     script←(⎕UCS 10){1↓¨⍵⊂⍨⍵=⍺}⊃re/(↓code,⍪data),⊂script
     z←script _NPUT path,name,'.dyalog'
     rel←path,'releaseNotes','.md'
     z←({⍵/⍨∧\(⍵∊∊⍵)∨⍵∨.≠¨'-'}releaseNotes⊣'')_NPUT rel
     {⎕←⍵}¨'Installed at ' ']open ',∘apo¨path rel
⍝:  :namespace <n>Init
⍝:     ⎕io ⎕ml←0
⍝:     name  ← ,'<n>'  ⍝ string
⍝:     group ← ,¨<g>   ⍝  list
⍝:     cmds  ← ,¨<c>   ⍝  list
⍝:     help  ← ,¨<h>   ⍝  list
⍝:     type  ← ,¨<t>   ⍝  list
⍝:     syn   ← ,¨<s>   ⍝  list
⍝:     parse ← ,¨<o>   ⍝  list
⍝:   ∇ r←List
⍝:     r←{⎕NS''}¨⍳⍴cmds
⍝:     r.(Name Desc Group Parse)←↓⍉↑cmds help group parse
⍝:   ∇
⍝:    Help←{r←'' 'Syntax: ',¨help syn⊃¨⍨cmds⍳⊂⍵
⍝:          0≥⎕SE.⎕NC name:⍕⍪r
⍝:          ⍕⍪r,⊂⎕SE.<n>._code.(MS.HA,Cc ⍵)
⍝:    }
⍝:    Run←{cmd arg←⍵
⍝:     (path wsid)←,\{⍵(↑{⍺⍵}↓)⍨(1+⊢⍳⌈/)+\⍵∊'\/'}##.SourceFile
⍝:     new←{⎕se.<n>._code. newSession''}⍣(~new)⊢new←0∊⎕SE.⎕NC name
⍝:     z←⎕SE.{6::0 ⋄ ⊢'#.<n>'∘⎕CY ⍵}⍣new⊢wsid
⍝:     nsi←((⎕XSI+.=¨'.')⍳1)⊃⎕NSI  ⍝ whence called
⍝:     type←type⊃⍨cmds⍳⊂cmd
⍝:   ⍝                    ↓↓↓↓
⍝:     ⎕SE.<n>._code. userCmdRun new cmd arg type nsi path wsid name
⍝:    }
⍝:  :endnamespace
⍝ Phil 2021-01-25 11:52 8.2.0+334
 }
