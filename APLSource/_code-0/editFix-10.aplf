 editFix←{⍺←⊢
     st←⍵≡'Start' ⋄ v17←18>⊃SV.aplver ⋄ cont←{(⍎first⊃⌽SV.fxnftr)⍵}⍣v17
     z←{{0}SV.itemvalue←editStore ⎕NS''}⍣st⊢0    ⍝ create value store
     st>v17:{0}⎕SE.Dyalog.{2=⍵.⎕NC'Fix':⊢⍵.(Fix AfterFix),←⊂⍬⍴⎕XSI
         {0}⍵.(Fix AfterFix)←⍬⍴⎕XSI}⍎'Hooks'⎕SE.Dyalog.⎕NS''
     st∧v17:{SV.fxnftr←⊃if≢¨⍵.(onFix onAfterFix) ⍝ odd extra nesting!
         {0}⍵.(onFix onAfterFix)←⍬⍴⎕XSI}'⎕se'⎕WG'Editor'
     (editor event value space name new)←6↑⍵     ⍝ so long as onFix unchanged
     first←event≡'Fix' ⋄ sn←1 ssp⊂⍕space         ⍝ is space scripted?
     {0::1 ⋄ 0∊SV.setupcomplete,⍴openProjects''}0:cont ⍵
     fqn←(⍕space),(sn≤space=#)/'.',name new⊃⍨ren←(nonul new)∧2≠space.⎕NC name
     0=dat←whichProject fqn:cont ⍵
     (null validItems fqn):
     first:{nv←fqn MS.GU if null⊃¨1 0 1/getValue,⊂fqn
         z←SV.itemvalue editStore nv
     }''
     new←MS.GU≡oldval←SV.itemvalue editStore fqn
     (0≥#.⎕NC∘⊂)fqn:
     null dat caseOK fqn:
     (oldval≡newval←⊃2⊃getValue,⊂fqn):           ⍝ unchanged
     file←⊃dat getSourceFilenames fqn
     var←2∊⌊⎕NC fqn ⋄ SV.sessionmsg←MS.GA
     old←{nonul _NINFO(UT.sp file),MS.AW}⍣var⊢1  ⍝ .char* - if edit not .apla
     old<var:{}logMsg'⎕',MS.BD,'- ',fqn,' - ',MS.BB ⍝ don't save
     type←⊃nameClass fqn
     z←⍴dat∘putChange⍣(new⍱(⊂fqn)∊dat.changed)⊢fqn oldval type
     z←logMsg MS.DS,⊃dat setChange fqn type newval
     {}logMsg if(0 1 1 1 arrayType)afterSave fqn file
⍝ ⍺ probably missing
⍝ ⍵ 'Start' or callback argument
⍝ ← 0 for 'Start' - else none
⍝ Phil 2020-03-20 22:15 8.0.0+308
 }
