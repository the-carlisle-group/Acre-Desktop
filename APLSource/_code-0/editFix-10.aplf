 editFix←{⍺←⊢
     (⍵≡'Start'):{                                     ⍝ from Start
         (wx ⎕SE.⎕WX)←⎕SE.⎕WX 1 ⋄ qed←'⎕SE'⎕WG'Editor' ⍝ keep  ⎕WX
         SV.fixandafter←⊃if≢¨qed.(onFix onAfterFix)    ⍝ odd extra nesting!
         qed.(onFix onAfterFix)←⍬⍴⎕XSI ⋄ ⎕SE.⎕WX←wx    ⍝ reset ⎕WX
         {0}SV.itemvalue←editStore ⎕NS''               ⍝ create value store
     }''
     (⍵≡'Close'):{                                     ⍝ from Close
         qed←'⎕SE'⎕WG'Editor' ⋄ (wx ⎕SE.⎕WX)←⎕SE.⎕WX 1
         qed.(onFix onAfterFix)←SV.fixandafter ⋄ {0}⎕SE.⎕WX←wx
     }''
     (editor event value space name new)←6↑⍵           ⍝ so long as onFix unchanged
     first←event≡'Fix' ⋄ sn←1 ssp⊂⍕space               ⍝ is space scripted?
     {0::1 ⋄ 0∊SV.setupcomplete,⍴openProjects''}0:(⍎first⊃⌽SV.fixandafter)⍵
     fqn←(⍕space),(sn≤space=#)/'.',name new⊃⍨ren←(≢∘∊⍨new)∧2≠space.⎕NC name
     0=dat←whichProject fqn:(⍎first⊃⌽SV.fixandafter)⍵
     (('⎕'∊fqn)≥(⎕NC⊂fqn)∊0,validAPLType''):
     first:{nv←fqn MS.GU if null⊃¨1 0 1/getValue,⊂fqn
         z←SV.itemvalue editStore nv
     }''
     new←MS.GU≡oldval←SV.itemvalue editStore fqn
     (0≥#.⎕NC∘⊂)fqn:
     null dat caseOK fqn:
     (oldval≡newval←⊃2⊃getValue,⊂fqn):                 ⍝ unchanged
     type←⊃nameClass fqn
     z←⍴dat∘putChange⍣(new⍱(⊂fqn)∊dat.changed)⊢fqn oldval type
     z←logMsg MS.DS,⊃dat setChange fqn type newval
⍝ ⍺ probably missing
⍝ ⍵ 'Start' or 'Close' or callback argument
⍝ ← 0 for 'Start' and 'Close' - else none
⍝ Phil 2018-10-23 19.51
 }
