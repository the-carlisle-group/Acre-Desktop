 R←Test_API_022(stopFlag batchFlag);⎕TRAP;projectName;projectPath;ref;deleteFilename;result;changePath;deleteFilenames
⍝ Exercise the API functions `Deletefile`, `Erase` and `Restore`
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')

 R←T.T._Failed

 projectName←⊃⎕SI
 projectPath←∆PATH,'\',projectName
 #.⎕SHADOW projectName
 ref←⍎projectName #.⎕NS''
 {}∆RunUcmd'CreateProject  "',projectPath,'" #.',projectName,' -keephistory=on'

 ref.⎕FX'r←Hello' 'r←''World'''
 {}∆RunUcmd'SetChanged #.',projectName,'.Hello'
 ref.⎕FX'r←Hello2' 'r←''Whole universe'''
 {}∆RunUcmd'SetChanged #.',projectName,'.Hello2'

 deleteFilename←⊃⎕SE.acre.Deletefile'#.',projectName,'.Hello'
 result←⎕SE.acre.Erase'#.',projectName,'.Hello'
 →T.GoToTidyUp result≢,⊂'#.',(⊃⎕SI),'.Hello'
 deleteFilename←⎕SE.acre.Deletefile'#.',projectName,'.Hello2'
 result←⎕SE.acre.Erase'#.',projectName,'.Hello2'
 →T.GoToTidyUp result≢,⊂'#.',(⊃⎕SI),'.Hello2'
 changePath←F.EnforceBackslash 1⊃⎕NPARTS⊃deleteFilename
 →T.GoToTidyUp projectPath≢(⍴projectPath)↑changePath
 →T.GoToTidyUp 2≠⍴⊃F.Dir changePath
 →T.GoToTidyUp~F.IsFile⊃deleteFilename
 deleteFilenames←F.NormalizePath ⎕SE.acre.Deletefile('#.',projectName,'.Hello')('#.',projectName,'.Hello2 ')
 →T.GoToTidyUp 1 1≢≡¨deleteFilenames
 →T.GoToTidyUp 2≠⍴deleteFilenames
 →T.GoToTidyUp~∧/projectPath∘{⍺≡(⍴⍺)↑⍵}¨deleteFilenames

 →T.GoToTidyUp 2≠≢list←F.ListFiles projectPath,'\.acre\changes\*.delete'
 →T.GoToTidyUp 0≠≢(F.ListFiles projectPath,'\.acre\changes\')~list
 →T.GoToTidyUp 0≠⎕NC'#.',projectName,'.Hello2'
 result←⎕SE.acre.Restore'#.',projectName,'.Hello2'
 →T.GoToTidyUp 1≠≢list←F.ListFiles projectPath,'\.acre\changes\*.aplf.change'
 →T.GoToTidyUp 1≠≢list←F.ListFiles projectPath,'\.acre\changes\*.delete'
 →T.GoToTidyUp 3≠⎕NC'#.',projectName,'.Hello2'

 →T.GoToTidyUp 0≠≢⎕SE.acre.Deletefile'#.DoesNotExistAtAll'

 R←T.T._OK

∆TidyUp:
 F.RmDir projectPath
 ∆RunUcmd'Close #.',projectName
⍝Done
