 R←Test_Misc_003(stopFlag batchFlag);projectName;projectPath;ref;result;⎕TRAP
⍝ Exercise `Undo` and `Redo`
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')

 R←∆Failed

 projectName←⊃⎕SI
 projectPath←∆PATH,'/',projectName
 #.⎕SHADOW projectName
 ref←⍎projectName #.⎕NS''
 ref.⎕FX'r←Hello' 'r←''World'''
 ref.⎕FX'r←Hello2' 'r←''World2'''
 ∆ClearLog

 :Trap (~stopFlag)/0
     result←∆RunUcmd'Createproject ',projectPath,' #.',projectName,' -keephistory=on'
 :Else
     →GoToTidyUp 1
 :EndTrap

 →GoToTidyUp result≢'#.',⊃⎕SI
 →GoToTidyUp'World'≢ref.Hello
 result←∆RunUcmd'SetChanged #.',projectName,'.Hello'   ⍝ Make sure we have the original version
 ref.⎕FX'r←Hello' 'r←''Universe'''
 result←∆RunUcmd'SetChanged #.',projectName,'.Hello'
 →GoToTidyUp(,⊂'#.Test_Misc_003.Hello')≢result
 →GoToTidyUp 1≠⍴⊃F.Dir projectPath,'/.acre/changes/'
 →GoToTidyUp'Universe'≢ref.Hello
 result←∆RunUcmd'Undo #.',projectName,'.Hello'
 →GoToTidyUp 1≠⍴result
 →GoToTidyUp'World'≢ref.Hello
 result←∆RunUcmd'Redo #.',projectName,'.Hello'
 →GoToTidyUp 1≠⍴result
 →GoToTidyUp'Universe'≢ref.Hello

 R←∆OK

∆TidyUp:
 F.RmDir projectPath
 ∆ClearLog
 ∆RunUcmd'Close #.',projectName
⍝Done
