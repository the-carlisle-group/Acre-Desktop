 R←Test_Config_UserExit_003(stopFlag batchFlag);⎕TRAP;configFilename;bin;buff;list;messages;projectPath;expected;body
⍝ Checks whether the user's exit function does actually commit the changes.
⍝ This is the user exit that allows the execution of any source code management command like Git's "Commit".
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 →(0<≢R←batchFlag/T._NoBatchTest)/0
 R←T._Failed

 ∆ClearLog
 #.⎕SHADOW'TEMP'
 'TEMP'#.⎕NS''
 #.TEMP.∆CONFIGNS←0
 #.TEMP.∆RESULT←⍬
 projectPath←F.GetTempPath,⊃⎕SI
 #.TEMP.∆PATH←projectPath
 #.TEMP.∆ExitFunctionDidRun←0
 body←'r←x UserExit y' 'r←0/∆ExitFunctionDidRun←1' 'f←∆PATH∘#.acre.AcreDesktop_Testcases.Tests.∆RunGitCommand' '∆RESULT←f ''commit -a -m''''!'''''' '
 Assert' '=1↑0⍴⊃#.TEMP.⎕FX↑body
 Assert' '=1↑0⍴⊃#.TEMP.⎕FX↑'r←Hello' '⍝ Change this function and then press <escape>'
 {}⎕CMD'rd /s /q ',projectPath

 :Trap (~stopFlag)/0
     {}'-variables=on'∆RunUcmd'Createproject "',projectPath,'" #.TEMP'
 :Else
     →T.GoToTidyUp 1
 :EndTrap

 {}projectPath ∆RunGitCommand'init'
 ∆RunUcmd'CloseProject #.TEMP'
 #.⎕EX'TEMP'

 (bin configFilename)←∆ReadConfigFile projectPath
 buff←''
 buff,←⊂'{'
 buff,←⊂' "Open": "",'
 buff,←⊂' "ProjectSpace": "#.TEMP",'
 buff,←⊂' "AfterSave": "#.TEMP.UserExit"'
 buff,←⊂'}'
 buff←,¨buff
 A.WriteUtf8File configFilename buff
 {}projectPath ∆RunGitCommand'add .'
 {}projectPath ∆RunGitCommand'commit -m "Initial commit"'
 expected←'On branch master' 'nothing to commit, working tree clean'
 →T.PassesIf expected≡projectPath ∆RunGitCommand'status'

 :Trap (~stopFlag)/0
     list←∆RunUcmd'OpenProject ',projectPath
 :Else
     →T.GoToTidyUp 1
 :EndTrap

 #.TEMP.⎕ED'Hello'
 →T.GoToTidyUp ⍬≡#.TEMP.∆RESULT
 →T.GoToTidyUp(,1)≢,#.TEMP.∆ExitFunctionDidRun        ⍝ Did the function run at all?
 →T.GoToTidyUp expected≡#.TEMP.∆RESULT                ⍝ Because there WAS something to commit (if the user DID change the function)!
 →T.GoToTidyUp 0=∨/'1 file changed'⍷∊#.TEMP.∆RESULT   ⍝ We should see this

 R←T._OK

∆TidyUp:
 :Trap 0 ⋄ {}⎕CMD'rd /s /q ',projectPath ⋄ :EndTrap   ⍝ At this point RmDir fails with "ACCESS DENIED": Git is the culprit! However, rd works. Reported as <01651>
 ∆ClearLog
 ∆RunUcmd'CloseProject #.TEMP'
⍝Done
