 R←Test_Run_005(stopFlag batchFlag);⎕TRAP;projectName;projectPath;ref;aplsourcePath;result;sourceFilename;sourcePath;sourceFilenames
⍝ Exercise the `run` function on "sourcefile".
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')

 R←∆Failed

 projectName←⊃⎕SI
 projectPath←∆PATH,'\',projectName
 #.⎕SHADOW projectName
 ref←⍎projectName #.⎕NS''
 {}∆RunUcmd'CreateProject  "',projectPath,'" #.',projectName

 ref.⎕FX'r←Hello' 'r←''World'''
 result←∆RunUcmd'SetChanged #.',projectName,'.Hello'
 →GoToTidyUp result≢,⊂'#.',projectName,'.Hello'

 ref.⎕FX'r←Hello2' 'r←''Whole universe'''
 result←∆RunUcmd'SetChanged #.',projectName,'.Hello2'
 →GoToTidyUp result≢,⊂'#.',projectName,'.Hello2'

 sourceFilename←'sourcefile'⎕SE.acre.run'#.',projectName,'.Hello'
 sourcePath←F.EnforceBackslash 1⊃⎕NPARTS sourceFilename
 →GoToTidyUp 3≠⍴⊃F.Dir sourcePath   ⍝ Quad-vars script is added automatically
 →GoToTidyUp~F.IsFile sourceFilename

 sourceFilenames←##.FilesAndDirs.NormalizePath'sourcefile'∘⎕SE.acre.run¨('#.',projectName,'.Hello')('#.',projectName,'.Hello2')
 →GoToTidyUp 1 1≢≡¨sourceFilenames
 →GoToTidyUp 2≠⍴sourceFilenames
 →GoToTidyUp~∧/projectPath∘{⍺≡(⍴⍺)↑⍵}¨sourceFilenames

 R←∆OK

∆TidyUp:
 F.RmDir projectPath
 ∆RunUcmd'Close #.',projectName
⍝Done
