 R←Test_API_019(stopFlag batchFlag);⎕TRAP;projectName;projectPath;ref;changeFilename;changePath;aplsourcePath;changeFilenames;result
⍝ Exercise the API function `ChangeFile`
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')

 R←T._Failed

 projectName←⊃⎕SI
 projectPath←F.EnforceSlash ∆PATH,'\',projectName
 #.⎕SHADOW projectName
 ref←⍎projectName #.⎕NS''
 result←∆RunUcmd'CreateProject  "',projectPath,'" #.',projectName,' -keephistory=on'
 →T.GoToTidyUp'#.Test_API_019'≢result

 ref.⎕FX'r←Hello' 'r←''World'''
 {}∆RunUcmd'SetChanged #.',projectName,'.Hello'
 ref.⎕FX'r←Hello2' 'r←''Whole universe'''
 {}∆RunUcmd'SetChanged #.',projectName,'.Hello2'
 changeFilename←⊃⎕SE.acre.Changefile'#.',projectName,'.Hello'
 changePath←F.EnforceSlash 1⊃⎕NPARTS changeFilename
 →T.GoToTidyUp projectPath≢(⍴projectPath)↑changePath
 →T.GoToTidyUp 1≠⍴⊃F.Dir changeFilename
 aplsourcePath←('Expand'F.NormalizePath changePath,'..\..'),'\APLSource'
 →T.GoToTidyUp 3≠⍴⊃F.Dir aplsourcePath,'\*'       ⍝ Quad-Vars script is added automatically
 changeFilenames←⎕SE.acre.Changefile('#.',projectName,'.Hello')('#.',projectName,'.Hello2')
 →T.GoToTidyUp 2≠⍴changeFilenames
 →T.GoToTidyUp 1 1≢≡¨changeFilenames
 →T.GoToTidyUp~∧/projectPath∘{⍺≡(⍴⍺)↑⍵}¨changeFilenames

 changeFilename←⊃⎕SE.acre.Changefile'#.',projectName,'.Hello_DoesNotExist'
 →T.GoToTidyUp 1≠≡changeFilename
 →T.GoToTidyUp~changePath{⍺≡(⍴⍺)↑⍵}changeFilename
 →T.GoToTidyUp'.*.change'{⍺≢(-⍴⍺)↑⍵}(⍴changePath)↓changeFilename

 →T.GoToTidyUp 0≠≢⎕SE.acre.Changefile'#.DoesNotExistAtAll'

 R←T._OK

∆TidyUp:
 F.RmDir projectPath
 ∆RunUcmd'CloseProject #.',projectName
⍝Done
